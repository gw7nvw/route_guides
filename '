require 'test_helper'

class SplitRouteTest < ActionDispatch::IntegrationTest

  def setup
    init()
  end


#split route with selected place
test "split route with selected place" do
    #create route
  
    #create place at half-way point

    #navigate to my route
    login_as(@testuser2.name,"password")
    assert is_logged_in?

    tr=Route.create(name: "splitroute", createdBy_id: @testuser.id, updatedBy_id:  @testuser.id,experienced_at: "01-01-1900", published: true, startplace_id: @testplace.id, endplace_id: @testplace2.id, routetype_id: 2, gradient_id: 2, river_id: 2, alpinesummer_id: 2,alpinewinter_id: 2,terrain_id: 2, via: "splittrack", importance_id: 2, time: 3, location: 'LINESTRING(175.61823472 -41.07151361 300,175.61823472 -41.06251490 200)', distance: 1, description: "A"*1000, reverse_description: "Z"*1000, winterdescription: 'X'*1000)

    tp=Place.create(name: "splitplace", createdBy_id: @testuser.id, updatedBy_id:  @testuser.id,experienced_at: "01-01-1900", x: 1820000, y: 5450000, projection_id: 2193, location: 'POINT(175.61823472 -41.06701426)',place_type: "Hut", place_owner: "DOC", altitude: "123", description:"test place1 description")

    get '/routes/'+tr.id.to_s
    assert :success
    assert_template 'routes/show'
    assert_select 'a[href=?]', '/routes/xrc'+tr.id.to_s+"xps"

    get '/routes/xrc'+tr.id.to_s+"xps"
    assert :success
    assert_template 'routes/show_many'

    # route is shown 
    assert_select 'div#route_title1', 'testplace to testplacei2 via splittrack'
    assert_select 'div#actiontitle2', 'Select place at which to split this route:'

    #split at selected place
    rtcnt=Route.count
    post '/places/select', url: 'xrc'+tr.id.to_s+'xps', route_startplace_id: tp.id.to_s, commit: 'select'
    assert :success
    assert_template 'routes/show_many'
    #new route created
    assert_equal Route.count, rtcnt+1
    tr2=Route.last
    tr.reload

    assert_select 'div.alert', 'Success: route split. Now please edit the details of the first half of the split route'
    #correct url sequence (modify original, view new)
    assert_select 'input#urlfield[value=?]', 'xrm'+tr.id.to_s+'xrv'+tr2.id.to_s

    ############################################
    #first route is shown in edit mdoe
    #values correct
    assert_select 'input#route_startplace_name[value=?]', 'testplace'
    assert_select 'input#route_endplace_name[value=?]', 'splitplace'
    assert_select 'input#route_distance[value=?]', 0.500865350899489 #TODO expected 500

    ############################################
    #second route is shown in view mdoe
    assert_select 'div#route_title1', 'splitplace to testplacei2 via splittrack'
    assert_select 'span#route_dist1', 'Distance: 0.5 km' #TODO expected 500m
    assert_select 'div#fw_t1', "From splitplace to testplacei2"

    #updated_by
    assert_equal tr.updatedBy_id, @testuser2.id
    assert_equal tr2.updatedBy_id, @testuser2.id

    #location
    assert_equal tr.location.as_text, "LINESTRING (175.61823472 -41.07151361 300.0, 175.61823472 -41.06701426 300.0)"
    assert_equal tr2.location.as_text, "LINESTRING (175.61823472 -41.06701426 200.0, 175.61823472 -41.0625149 200.0)"

    #altitude
    assert_equal tr.altloss, 0
    assert_equal tr.altgain, 0
    assert_equal tr.minalt, 300
    assert_equal tr.maxalt, 300
    assert_equal tr2.altloss, 0
    assert_equal tr2.altgain, 0
    assert_equal tr2.minalt, 200
    assert_equal tr2.maxalt, 200

    #intances
    #original route now has 2 instances
    assert_equal tr.routeInstances.count, 2
    assert_equal tr2.routeInstances.count, 1

    #all other values equal
    assert_equal tr.description, tr2.description
    assert_equal tr.routetype_id, tr2.routetype_id
    assert_equal tr.terrain_id, tr2.terrain_id
    assert_equal tr.alpinesummer_id, tr2.alpinesummer_id
    assert_equal tr.river_id, tr2.river_id
    assert_equal tr.alpinewinter_id, tr2.alpinewinter_id
    assert_equal tr.winterdescription, tr2.winterdescription
    assert_equal tr.createdBy_id, tr2.createdBy_id
#    assert_equal tr.created_at, tr2.created_at
    assert_equal tr.via, tr2.via
    assert_equal tr.reverse_description, tr2.reverse_description
    assert_equal tr.time, tr2.time
    assert_equal tr.datasource, tr2.datasource
    assert_equal tr.published, tr2.published
    assert_equal tr.experienced_at, tr2.experienced_at

    ############################################
    #save pt1, part 2 placed in edit mode
    patch '/routes/'+tr.id.to_s, route: { startplace_id: @testplace.id.to_s, endplace_id: tp.id.to_s, via: "changedvia", experienced_at: "2015-01-01", location: "LINESTRING (175.61823472 -41.07151361 300.0, 175.61823472 -41.06701426 300.0)", description: "M"*3000, reverse_description: "N"*3000, time: "1.1", distance: "0.5", importance_id: "3", routetype_id: "3", gradient_id: "3", terrain_id: "3", alpinesummer_id: "3", river_id: "3", alpinewinter_id: "3", winterdescription: "O"*3000, published: "1" }, datasource: "Uploaded from GPS", save: "Save", url: 'xrm'+tr.id.to_s+'xrv'+tr2.id.to_s

    assert :success
    assert_template 'routes/show_many'
    tr.reload

    assert_select 'div.alert', 'First segment updated. Now please update the details of the second part of the split route'
    #correct url sequence (modify original, view new)
    assert_select 'input#urlfield[value=?]', 'xrv'+tr.id.to_s+'xre'+tr2.id.to_s

    ############################################
    #first route is shown in view mdoe
    assert_select 'div#route_title1', 'testplace to splitplace via changedvia'
    assert_select 'div#fw_t1', "From testplace to splitplace"

    ############################################
    #second route is shown in edit mdoe
    #values correct
    assert_select 'input#route_startplace_name[value=?]', 'splitplace'
    assert_select 'input#route_endplace_name[value=?]', 'testplacei2'
    assert_select 'input#route_distance[value=?]', 0.5008664640973013 #TODO expected 0.500

    ############################################
    #save pt2, part 2 placed in edit moderts 1 and 2 shown as view
    patch '/routes/'+tr2.id.to_s, route: { startplace_id: tp.id.to_s, endplace_id: @testplace2.id.to_s, via: "changedvia", experienced_at: "2015-01-01", location: "LINESTRING (175.61823472 -41.06701426 200.0, 175.61823472 -41.0625149 200.0)", description: "M"*3000, reverse_description: "N"*3000, time: "1.1", distance: "0.5", importance_id: "3", routetype_id: "3", gradient_id: "3", terrain_id: "3", alpinesummer_id: "3", river_id: "3", alpinewinter_id: "3", winterdescription: "O"*3000, published: "1" }, datasource: "Uploaded from GPS", save: "Save", url: 'xrv'+tr.id.to_s+'xre'+tr2.id.to_s

    assert :success
    assert_template 'routes/show_many'
    tr.reload

    assert_select 'div.alert', 'Route updated, id:'+tr2.id.to_s
    #correct url sequence (modify original, view new)
#    assert_select 'input#urlfield[value=?]', 'xrv'+tr.id.to_s+'xrv'+tr2.id.to_s

    ############################################
    #first route is shown in view mdoe
    assert_select 'div#route_title1', 'testplace to splitplace via changedvia'
    assert_select 'div#fw_t1', "From testplace to splitplace"

    ############################################
    #second route is shown in view mdoe
    assert_select 'div#route_title2', 'splitplace to testplacei2 via changedvia'
    assert_select 'div#fw_t2', "From splitplace to testplacei2"
 
end

#split route with added place
test "split route with added place" do
    #create route
  
    #create place at half-way point

    #navigate to my route
    login_as(@testuser2.name,"password")
    assert is_logged_in?

    tr=Route.create(name: "splitroute", createdBy_id: @testuser.id, updatedBy_id:  @testuser.id,experienced_at: "01-01-1900", published: true, startplace_id: @testplace.id, endplace_id: @testplace2.id, routetype_id: 2, gradient_id: 2, river_id: 2, alpinesummer_id: 2,alpinewinter_id: 2,terrain_id: 2, via: "splittrack", importance_id: 2, time: 3, location: 'LINESTRING(175.61823472 -41.07151361 300,175.61823472 -41.06251490 200)', distance: 1, description: "A"*1000, reverse_description: "Z"*1000, winterdescription: 'X'*1000)

#    tp=Place.create(name: "splitplace", createdBy_id: @testuser.id, updatedBy_id:  @testuser.id,experienced_at: "01-01-1900", x: 1820000, y: 5450000, projection_id: 2193, location: 'POINT(175.61823472 -41.06701426)',place_type: "Hut", place_owner: "DOC", altitude: "123", description:"test place1 description")

    get '/routes/'+tr.id.to_s
    assert :success
    assert_template 'routes/show'
    assert_select 'a[href=?]', '/routes/xrc'+tr.id.to_s+"xps"

    get '/routes/xrc'+tr.id.to_s+"xps"
    assert :success
    assert_template 'routes/show_many'

    # route is shown 
    assert_select 'div#route_title1', 'testplace to testplacei2 via splittrack'
    assert_select 'div#actiontitle2', 'Select place at which to split this route:'

    #split at selected place
    rtcnt=Route.count
    get '/routes/xrc'+tr.id.to_s+"xpn"

    assert :success
    assert_template 'routes/show_many'

    # route is shown 
    assert_select 'div#route_title1', 'testplace to testplacei2 via splittrack'
    assert_select 'div#actiontitle2', 'Enter details of place at which to split this route:'

    #post '/places/select', url: 'xrc'+tr.id.to_s+'xps', route_startplace_id: tp.id.to_s, commit: 'select'
    assert :success
    assert_template 'routes/show_many'
    #new route created
    assert_equal Route.count, rtcnt+1
    tr2=Route.last
    tr.reload

    assert_select 'div.alert', 'Success: route split. Now please edit the details of the first half of the split route'
    #correct url sequence (modify original, view new)
    assert_select 'input#urlfield[value=?]', 'xrm'+tr.id.to_s+'xrv'+tr2.id.to_s

    ############################################
    #first route is shown in edit mdoe
    #values correct
    assert_select 'input#route_startplace_name[value=?]', 'testplace'
    assert_select 'input#route_endplace_name[value=?]', 'splitplace'
    assert_select 'input#route_distance[value=?]', 0.500865350899489 #TODO expected 500

    ############################################
    #second route is shown in view mdoe
    assert_select 'div#route_title1', 'splitplace to testplacei2 via splittrack'
    assert_select 'span#route_dist1', 'Distance: 0.5 km' #TODO expected 500m
    assert_select 'div#fw_t1', "From splitplace to testplacei2"

    #updated_by
    assert_equal tr.updatedBy_id, @testuser2.id
    assert_equal tr2.updatedBy_id, @testuser2.id

    #location
    assert_equal tr.location.as_text, "LINESTRING (175.61823472 -41.07151361 300.0, 175.61823472 -41.06701426 300.0)"
    assert_equal tr2.location.as_text, "LINESTRING (175.61823472 -41.06701426 200.0, 175.61823472 -41.0625149 200.0)"

    #altitude
    assert_equal tr.altloss, 0
    assert_equal tr.altgain, 0
    assert_equal tr.minalt, 300
    assert_equal tr.maxalt, 300
    assert_equal tr2.altloss, 0
    assert_equal tr2.altgain, 0
    assert_equal tr2.minalt, 200
    assert_equal tr2.maxalt, 200

    #intances
    #original route now has 2 instances
    assert_equal tr.routeInstances.count, 2
    assert_equal tr2.routeInstances.count, 1

    #all other values equal
    assert_equal tr.description, tr2.description
    assert_equal tr.routetype_id, tr2.routetype_id
    assert_equal tr.terrain_id, tr2.terrain_id
    assert_equal tr.alpinesummer_id, tr2.alpinesummer_id
    assert_equal tr.river_id, tr2.river_id
    assert_equal tr.alpinewinter_id, tr2.alpinewinter_id
    assert_equal tr.winterdescription, tr2.winterdescription
    assert_equal tr.createdBy_id, tr2.createdBy_id
#    assert_equal tr.created_at, tr2.created_at
    assert_equal tr.via, tr2.via
    assert_equal tr.reverse_description, tr2.reverse_description
    assert_equal tr.time, tr2.time
    assert_equal tr.datasource, tr2.datasource
    assert_equal tr.published, tr2.published
    assert_equal tr.experienced_at, tr2.experienced_at

    ############################################
    #save pt1, part 2 placed in edit mode
    patch '/routes/'+tr.id.to_s, route: { startplace_id: @testplace.id.to_s, endplace_id: tp.id.to_s, via: "changedvia", experienced_at: "2015-01-01", location: "LINESTRING (175.61823472 -41.07151361 300.0, 175.61823472 -41.06701426 300.0)", description: "M"*3000, reverse_description: "N"*3000, time: "1.1", distance: "0.5", importance_id: "3", routetype_id: "3", gradient_id: "3", terrain_id: "3", alpinesummer_id: "3", river_id: "3", alpinewinter_id: "3", winterdescription: "O"*3000, published: "1" }, datasource: "Uploaded from GPS", save: "Save", url: 'xrm'+tr.id.to_s+'xrv'+tr2.id.to_s

    assert :success
    assert_template 'routes/show_many'
    tr.reload

    assert_select 'div.alert', 'First segment updated. Now please update the details of the second part of the split route'
    #correct url sequence (modify original, view new)
    assert_select 'input#urlfield[value=?]', 'xrv'+tr.id.to_s+'xre'+tr2.id.to_s

    ############################################
    #first route is shown in view mdoe
    assert_select 'div#route_title1', 'testplace to splitplace via changedvia'
    assert_select 'div#fw_t1', "From testplace to splitplace"

    ############################################
    #second route is shown in edit mdoe
    #values correct
    assert_select 'input#route_startplace_name[value=?]', 'splitplace'
    assert_select 'input#route_endplace_name[value=?]', 'testplacei2'
    assert_select 'input#route_distance[value=?]', 0.5008664640973013 #TODO expected 0.500

    ############################################
    #save pt2, part 2 placed in edit moderts 1 and 2 shown as view
    patch '/routes/'+tr2.id.to_s, route: { startplace_id: tp.id.to_s, endplace_id: @testplace2.id.to_s, via: "changedvia", experienced_at: "2015-01-01", location: "LINESTRING (175.61823472 -41.06701426 200.0, 175.61823472 -41.0625149 200.0)", description: "M"*3000, reverse_description: "N"*3000, time: "1.1", distance: "0.5", importance_id: "3", routetype_id: "3", gradient_id: "3", terrain_id: "3", alpinesummer_id: "3", river_id: "3", alpinewinter_id: "3", winterdescription: "O"*3000, published: "1" }, datasource: "Uploaded from GPS", save: "Save", url: 'xrv'+tr.id.to_s+'xre'+tr2.id.to_s

    assert :success
    assert_template 'routes/show_many'
    tr.reload

    assert_select 'div.alert', 'Route updated, id:'+tr2.id.to_s
    #correct url sequence (modify original, view new)
#    assert_select 'input#urlfield[value=?]', 'xrv'+tr.id.to_s+'xrv'+tr2.id.to_s

    ############################################
    #first route is shown in view mdoe
    assert_select 'div#route_title1', 'testplace to splitplace via changedvia'
    assert_select 'div#fw_t1', "From testplace to splitplace"

    ############################################
    #second route is shown in view mdoe
    assert_select 'div#route_title2', 'splitplace to testplacei2 via changedvia'
    assert_select 'div#fw_t2', "From splitplace to testplacei2"
 
end

#split route with edited place

#no trips
#forward trip has new route segments .... pt1, pt2, ...
#reverse trip has new route segments .... -pt2, -pt1, ...

#no links ok
#linked items inherit both segments

#errors:
##Distance > 200m
##Split returned 1 segment
##Start segment lenght=0
##End segment length=0
##Save of new route failed (validation errors) (duplicate name a good one)
##Save of old route fails (dupicate name a good one)
##Copy link fails (how???)
##Create tripdetail (forwards) fails
##Create tripdetail (backwards) fails
##Update existing tripdetail fails


end
